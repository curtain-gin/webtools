#!/usr/bin/env python
# -*- coding: utf-8 -*-


import random
import re
import string
import logging

# 导入某个模块的部分类或方法
from datetime import datetime, timedelta

# 导入常量并重命名
# from webTools.public.constant as c
from  webTools.public import  constant as const



class IdNumber(str):
    """
    随机字符串生成
    """

    def __init__(self, id_number):
        super(IdNumber, self).__init__()
        self.id = id_number
        self.area_id = int(self.id[0:6])
        self.birth_year = int(self.id[6:10])
        self.birth_month = int(self.id[10:12])
        self.birth_day = int(self.id[12:14])



    def get_area_name(self):
        """根据区域编号取出区域名称"""
        return const.AREA_INFO[self.area_id]

    def get_birthday(self):
        """通过身份证号获取出生日期"""
        return "{0}-{1}-{2}".format(self.birth_year, self.birth_month, self.birth_day)

    def get_age(self):
        logger=logging.getLogger('django')
        try:
            """通过身份证号获取年龄"""
            now = (datetime.now() + timedelta(days=1))
            year, month, day = now.year, now.month, now.day

            if year == self.birth_year:
                return 0
            else:
                if self.birth_month > month or (self.birth_month == month and self.birth_day > day):
                    return year - self.birth_year - 1
                else:
                    return year - self.birth_year
        except Exception as  e:
            logger.error(e)

    def get_sex(self):
        logger = logging.getLogger('django')
        try:
            """通过身份证号获取性别， 女生：0，男生：1"""
            return int(self.id[16:17]) % 2
        except Exception as  e:
            logger.error(e)

    def get_check_digit(self):
        """通过身份证号获取校验码"""
        logger = logging.getLogger('django')
        try:
            check_sum = 0
            for i in range(0, 17):
                check_sum += ((1 << (17 - i)) % 11) * int(self.id[i])
            check_digit = (12 - (check_sum % 11)) % 11
            return check_digit if check_digit < 10 else 'X'
        except Exception as  e:
            logger.error(e)
    @classmethod
    def verify_id(cls, id_number):
        """校验身份证是否正确"""
        logger = logging.getLogger('django')
        try:
            if re.match(const.ID_NUMBER_18_REGEX, id_number):
                check_digit = cls(id_number).get_check_digit()
                return str(check_digit) == id_number[-1]
            else:
                return bool(re.match(const.ID_NUMBER_15_REGEX, id_number))
        except Exception as  e:
            logger.error(e)

    @classmethod
    def generate_id(cls, sex=0,id_city='杭州',idd_year='19980101'):
        """随机生成身份证号，sex = 0表示女性，sex = 1表示男性"""
        logger = logging.getLogger('django')
        try:
            # 随机生成一个区域码(6位数)
            # id_number = str(random.choice(list(const.AREA_INFO.keys())))#随机生成的区域码
            # print(id_number)
            #自定义地区生成区域码

            city_list=[]
            city=id_city
            for i,o in const.AREA_INFO.items():
                if city in o:
                    city_list.append(i)
            id_number=str(city_list[random.randint(0, len(city_list) - 1)])
            # 限定出生日期范围(8位数)
            start, end = datetime.strptime("%s"%idd_year, "%Y%m%d"), datetime.strptime("%s"%idd_year, "%Y%m%d")
            birth_days = datetime.strftime(start + timedelta(), "%Y%m%d")
            id_number += str(birth_days)
            # 顺序码(2位数)
            id_number += str(random.randint(10, 99))
            # 性别码(1位数)
            id_number += str(random.randrange(sex, 10, step=2))
            # 校验码(1位数)
            return id_number + str(cls(id_number).get_check_digit())
        except Exception as  e:
            logger.error(e)


    @classmethod
    def test_phone_num(self):
        """随机生成手机号"""
        logger = logging.getLogger('django')
        try:
            HeadNumList = ["130", "131", "138",

                           "145", "146", "147",

                           "150", "151", "152",

                           "172", "174", "175",

                           "180", "181", "182",

                           "198"

                           ]
            EightNum = ''.join(random.sample(string.digits, 8))


            return random.choice(HeadNumList) + EightNum
        except Exception as  e:
            logger.error(e)
    @classmethod
    def random_name(cls):
        """随机生成常见姓氏姓名"""
        logger = logging.getLogger('django')
        try:
            common_last_name = ['赵', '钱', '孙', '李', '周', '吴', '郑', '王', '冯', '陈', '褚', '卫', '蒋', '沈', '韩', '杨', '朱', '秦', '尤', '许', '何',
                   '吕', '施', '张', '孔', '曹', '严', '华', '金', '魏', '陶', '姜', '戚', '谢', '邹', '喻', '柏', '水', '窦', '章', '云', '苏',
                   '潘', '葛', '奚', '范', '彭', '郎', '鲁', '韦', '昌', '马', '苗', '凤', '花', '方', '俞', '任', '袁', '柳', '酆', '鲍', '史',
                   '唐', '费', '廉', '岑', '薛', '雷', '贺', '倪', '汤', '滕', '殷', '罗', '毕', '郝', '邬', '安', '常', '乐', '于', '时', '傅',
                   '皮', '卞', '齐', '康', '伍', '余', '元', '卜', '顾', '孟', '平', '黄', '和', '穆', '萧', '尹', '姚', '邵', '湛', '汪', '祁',
                   '毛', '禹', '狄', '米', '贝', '明', '臧', '计', '伏', '成', '戴', '谈', '宋', '茅', '庞', '熊', '纪', '舒', '屈', '项', '祝',
                   '董', '梁', '杜', '阮', '蓝', '闵', '席', '季', '麻', '强', '贾', '路', '娄', '危', '江', '童', '颜', '郭', '梅', '盛', '林',
                   '刁', '钟', '徐', '邱', '骆', '高', '夏', '蔡', '田', '樊', '胡', '凌', '霍', '虞', '万', '支', '柯', '昝', '管', '卢', '莫',
                   '经', '房', '裘', '缪', '干', '解', '应', '宗', '丁', '宣', '贲', '邓', '郁', '单', '杭', '洪', '包', '诸', '左', '石', '崔',
                   '吉', '钮', '龚', '程', '嵇', '邢', '滑', '裴', '陆', '荣', '翁', '荀', '羊', '於', '惠', '甄', '麴', '家', '封', '芮', '羿',
                   '储', '靳', '汲', '邴', '糜', '松', '井', '段', '富', '巫', '乌', '焦', '巴', '弓', '牧', '隗', '山', '谷', '车', '侯', '宓',
                   '蓬', '全', '郗', '班', '仰', '秋', '仲', '伊', '宫', '宁', '仇', '栾', '暴', '甘', '钭', '厉', '戎', '祖', '武', '符', '刘',
                   '景', '詹', '束', '龙', '叶', '幸', '司', '韶', '郜', '黎', '蓟', '薄', '印', '宿', '白', '怀', '蒲', '邰', '从', '鄂', '索',
                   '咸', '籍', '赖', '卓', '蔺', '屠', '蒙', '池', '乔', '阴', '欎', '胥', '能', '苍', '双', '闻', '莘', '党', '翟', '谭', '贡',
                   '劳', '逄', '姬', '申', '扶', '堵', '冉', '宰', '郦', '雍', '舄', '璩', '桑', '桂', '濮', '牛', '寿', '通', '边', '扈', '燕',
                   '冀', '郏', '浦', '尚', '农', '温', '别', '庄', '晏', '柴', '瞿', '阎', '充', '慕', '连', '茹', '习', '宦', '艾', '鱼', '容',
                   '向', '古', '易', '慎', '戈', '廖', '庾', '终', '暨', '居', '衡', '步', '都', '耿', '满', '弘', '匡', '国', '文', '寇', '广',
                   '禄', '阙', '东', '殴', '殳', '沃', '利', '蔚', '越', '夔', '隆', '师', '巩', '厍', '聂', '晁', '勾', '敖', '融', '冷', '訾',
                   '辛', '阚', '那', '简', '饶', '空', '曾', '毋', '沙', '乜', '养', '鞠', '须', '丰', '巢', '关', '蒯', '相', '查', '後', '荆',
                   '红', '游', '竺', '权', '逯', '盖', '益', '桓', '公', '万', '俟', '司', '马', '上', '官', '欧', '阳', '夏', '侯', '诸', '葛',
                   '闻', '人', '东', '方', '赫', '连', '皇', '甫', '尉', '迟', '公', '羊', '澹', '台', '公', '冶', '宗', '政', '濮', '阳', '淳',
                   '于', '单', '于', '太', '叔', '申', '屠', '公', '孙', '仲', '孙', '轩', '辕', '令', '狐', '钟', '离', '宇', '文', '长', '孙',
                   '慕', '容', '鲜', '于', '闾', '丘', '司', '徒', '司', '空', '亓', '官', '司', '寇', '仉', '督', '子', '车', '颛', '孙', '端',
                   '木', '巫', '马', '公', '西', '漆', '雕', '乐', '正', '壤', '驷', '公', '良', '拓', '跋', '夹', '谷', '宰', '父', '谷', '梁',
                   '晋', '楚', '闫', '法', '汝', '鄢', '涂', '钦', '段', '干', '百', '里', '东', '郭', '南', '门', '呼', '延', '归', '海', '羊',
                   '舌', '微', '生', '岳', '帅', '缑', '亢', '况', '后', '有', '琴', '梁', '丘', '左', '丘', '东', '门', '西', '门', '商', '牟',
                   '佘', '佴', '伯', '赏', '南', '宫', '墨', '哈', '谯', '笪', '年', '爱', '阳', '佟', '第', '五', '言', '福', '百', '家', '姓',
                   '终', ]

            test_last_name=common_last_name[random.randint(0, len(common_last_name)-1)]
            common_first_name=['的', '一', '是', '了', '我', '不', '人', '在', '他', '有', '这', '个', '上', '们', '来', '到', '时', '大', '地', '为',
                            '子', '中', '你', '说', '生', '国', '年', '着', '就', '那', '和', '要', '她', '出', '也', '得', '里', '后', '自', '以',
                            '会', '家', '可', '下', '而', '过', '天', '去', '能', '对', '小', '多', '然', '于', '心', '学', '么', '之', '都', '好',
                            '看', '起', '发', '当', '没', '成', '只', '如', '事', '把', '还', '用', '第', '样', '道', '想', '作', '种', '开', '美',
                            '总', '从', '无', '情', '己', '面', '最', '女', '但', '现', '前', '些', '所', '同', '日', '手', '又', '行', '意', '动',
                            '方', '期', '它', '头', '经', '长', '儿', '回', '位', '分', '爱', '老', '因', '很', '给', '名', '法', '间', '斯', '知',
                            '世', '什', '两', '次', '使', '身', '者', '被', '高', '已', '亲', '其', '进', '此', '话', '常', '与', '活', '正', '感',
                            '见', '明', '问', '力', '理', '尔', '点', '文', '几', '定', '本', '公', '特', '做', '外', '孩', '相', '西', '果', '走',
                            '将', '月', '十', '实', '向', '声', '车', '全', '信', '重', '三', '机', '工', '物', '气', '每', '并', '别', '真', '打',
                            '太', '新', '比', '才', '便', '夫', '再', '书', '部', '水', '像', '眼', '等', '体', '却', '加', '电', '主', '界', '门',
                            '利', '海', '受', '听', '表', '德', '少', '克', '代', '员', '许', '稜', '先', '口', '由', '死', '安', '写', '性', '马',
                            '光', '白', '或', '住', '难', '望', '教', '命', '花', '结', '乐', '色', '更', '拉', '东', '神', '记', '处', '让', '母',
                            '父', '应', '直', '字', '场', '平', '报', '友', '关', '放', '至', '张', '认', '接', '告', '入', '笑', '内', '英', '军',
                            '候', '民', '岁', '往', '何', '度', '山', '觉', '路', '带', '万', '男', '边', '风', '解', '叫', '任', '金', '快', '原',
                            '吃', '妈', '变', '通', '师', '立', '象', '数', '四', '失', '满', '战', '远', '格', '士', '音', '轻', '目', '条', '呢',
                            '病', '始', '达', '深', '完', '今', '提', '求', '清', '王', '化', '空', '业', '思', '切', '怎', '非', '找', '片', '罗',
                            '钱', '紶', '吗', '语', '元', '喜', '曾', '离', '飞', '科', '言', '干', '流', '欢', '约', '各', '即', '指', '合', '反',
                            '题', '必', '该', '论', '交', '终', '林', '请', '医', '晚', '制', '球', '决', '窢', '传', '画', '保', '读', '运', '及',
                            '则', '房', '早', '院', '量', '苦', '火', '布', '品', '近', '坐', '产', '答', '星', '精', '视', '五', '连', '司', '巴',
                            '奇', '管', '类', '未', '朋', '且', '婚', '台', '夜', '青', '北', '队', '久', '乎', '越', '观', '落', '尽', '形', '影',
                            '红', '爸', '百', '令', '周', '吧', '识', '步', '希', '亚', '术', '留', '市', '半', '热', '送', '兴', '造', '谈', '容',
                            '极', '随', '演', '收', '首', '根', '讲', '整', '式', '取', '照', '办', '强', '石', '古', '华', '諣', '拿', '计', '您',
                            '装', '似', '足', '双', '妻', '尼', '转', '诉', '米', '称', '丽', '客', '南', '领', '节', '衣', '站', '黑', '刻', '统',
                            '断', '福', '城', '故', '历', '惊', '脸', '选', '包', '紧', '争', '另', '建', '维', '绝', '树', '系', '伤', '示', '愿',
                            '持', '千', '史', '谁', '准', '联', '妇', '纪', '基', '买', '志', '静', '阿', '诗', '独', '复', '痛', '消', '社', '算',
                            '义', '竟', '确', '酒', '需', '单', '治', '卡', '幸', '兰', '念', '举', '仅', '钟', '怕', '共', '毛', '句', '息', '功',
                            '官', '待', '究', '跟', '穿', '室', '易', '游', '程', '号', '居', '考', '突', '皮', '哪', '费', '倒', '价', '图', '具',
                            '刚', '脑', '永', '歌', '响', '商', '礼', '细', '专', '黄', '块', '脚', '味', '灵', '改', '据', '般', '破', '引', '食',
                            '仍', '存', '众', '注', '笔', '甚', '某', '沉', '血', '备', '习', '校', '默', '务', '土', '微', '娘', '须', '试', '怀',
                            '料', '调', '广', '蜖', '苏', '显', '赛', '查', '密', '议', '底', '列', '富', '梦', '错', '座', '参', '八', '除', '跑',
                            '亮', '假', '印', '设', '线', '温', '虽', '掉', '京', '初', '养', '香', '停', '际', '致', '阳', '纸', '李', '纳', '验',
                            '助', '激', '够', '严', '证', '帝', '饭', '忘', '趣', '支', '春', '集', '丈', '木', '研', '班', '普', '导', '顿', '睡',
                            '展', '跳', '获', '艺', '六', '波', '察', '群', '皇', '段', '急', '庭', '创', '区', '奥', '器', '谢', '弟', '店', '否',
                            '害', '草', '排', '背', '止', '组', '州', '朝', '封', '睛', '板', '角', '况', '曲', '馆', '育', '忙', '质', '河', '续',
                            '哥', '呼', '若', '推', '境', '遇', '雨', '标', '姐', '充', '围', '案', '伦', '护', '冷', '警', '贝', '著', '雪', '索',
                            '剧', '啊', '船', '险', '烟', '依', '斗', '值', '帮', '汉', '慢', '佛', '肯', '闻', '唱', '沙', '局', '伯', '族', '低',
                            '玩', '资', '屋', '击', '速', '顾', '泪', '洲', '团', '圣', '旁', '堂', '兵', '七', '露', '园', '牛', '哭', '旅', '街',
                            '劳', '型', '烈', '姑', '陈', '莫', '鱼', '异', '抱', '宝', '权', '鲁', '简', '态', '级', '票', '怪', '寻', '杀', '律',
                            '胜', '份', '汽', '右', '洋', '范', '床', '舞', '秘', '午', '登', '楼', '贵', '吸', '责', '例', '追', '较', '职', '属',
                            '渐', '左', '录', '丝', '牙', '党', '继', '托', '赶', '章', '智', '冲', '叶', '胡', '吉', '卖', '坚', '喝', '肉', '遗',
                            '救', '修', '松', '临', '藏', '担', '戏', '善', '卫', '药', '悲', '敢', '靠', '伊', '村', '戴', '词', '森', '耳', '差',
                            '短', '祖', '云', '规', '窗', '散', '迷', '油', '旧', '适', '乡', '架', '恩', '投', '弹', '铁', '博', '雷', '府', '压',
                            '超', '负', '勒', '杂', '醒', '洗', '采', '毫', '嘴', '毕', '九', '冰', '既', '状', '乱', '景', '席', '珍', '童', '顶',
                            '派', '素', '脱', '农', '疑', '练', '野', '按', '犯', '拍', '征', '坏', '骨', '余', '承', '置', '臓', '彩', '灯', '巨',
                            '琴', '免', '环', '姆', '暗', '换', '技', '翻', '束', '增', '忍', '餐', '洛', '塞', '缺', '忆', '判', '欧', '层', '付',
                            '阵', '玛', '批', '岛', '项', '狗', '休', '懂', '武', '革', '良', '恶', '恋', '委', '拥', '娜', '妙', '探', '呀', '营',
                            '退', '摇', '弄', '桌', '熟', '诺', '宣', '银', '势', '奖', '宫', '忽', '套', '康', '供', '优', '课', '鸟', '喊', '降',
                            '夏', '困', '刘', '罪', '亡', '鞋', '健', '模', '败', '伴', '守', '挥', '鲜', '财', '孤', '枪', '禁', '恐', '伙', '杰',
                            '迹', '妹', '藸', '遍', '盖', '副', '坦', '牌', '江', '顺', '秋', '萨', '菜', '划', '授', '归', '浪', '听', '凡', '预',
                            '奶', '雄', '升', '碃', '编', '典', '袋', '莱', '含', '盛', '济', '蒙', '棋', '端', '腿', '招', '释', '介', '烧', '误',
                            '乾', '坤']
            random_one_or_two=random.randint(1,2)
            if random_one_or_two ==1 :
                all_order_name=common_first_name[random.randint(0, len(common_first_name)-1)]
            else:
                all_order_name = common_first_name[random.randint(0, len(common_first_name)-1)] +common_first_name[random.randint(0, len(common_first_name)-1)]

            #中文unicode编码表
            # all_order_name = ""
            # for i in  range(random.randint(1,2)):
            #     all_order_name=all_order_name+chr(random.randint(0x4e00, 0x9FA5))
            all_order = test_last_name + all_order_name
            return all_order

        except Exception as  e:
            logger.error(e)
#
if __name__ == '__main__':
    random_sex = random.randint(0, 1)  # 随机生成男(1)或女(0)
    print(IdNumber.generate_id(random_sex,'杭州','20222222'))  # 随机生成身份证号
    # print(IdNumber('410326199507103197').area_id)  # 地址编码:410326
    # print(IdNumber('410326199507103197').get_area_name())  # 地址:河南省洛阳市汝阳县
    # print(IdNumber('410326199507103197').get_birthday())  # 生日:1995-7-10
    # print(IdNumber('410326199507103197').get_age())  # 年龄:23(岁)
    # print(IdNumber('410326199507103197').get_sex())  # 性别:1(男)
    # print(IdNumber('410326199507103197').get_check_digit())  # 校验码:7
    # print(IdNumber.verify_id('410326199507103198'))  # 检验身份证是否正确:False
    # print(IdNumber.test_phone_num())# 随机生成手机号
    # print(IdNumber.random_name())#随机生成姓名

